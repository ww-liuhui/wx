// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: NewsSubscribe.proto

package com.weiwuu.protobuf;

/**
 * Protobuf type {@code com.weiwuu.protobuf.NewsSubscribe}
 *
 * <pre>
 * 消息订阅
 * </pre>
 */
public  final class NewsSubscribe extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:com.weiwuu.protobuf.NewsSubscribe)
    NewsSubscribeOrBuilder {
  // Use NewsSubscribe.newBuilder() to construct.
  private NewsSubscribe(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private NewsSubscribe() {
    id_ = 0;
    userId_ = 0;
    topicIds_ = java.util.Collections.emptyList();
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private NewsSubscribe(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 8: {

            id_ = input.readInt32();
            break;
          }
          case 16: {

            userId_ = input.readInt32();
            break;
          }
          case 24: {
            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
              topicIds_ = new java.util.ArrayList<Integer>();
              mutable_bitField0_ |= 0x00000004;
            }
            topicIds_.add(input.readInt32());
            break;
          }
          case 26: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
              topicIds_ = new java.util.ArrayList<Integer>();
              mutable_bitField0_ |= 0x00000004;
            }
            while (input.getBytesUntilLimit() > 0) {
              topicIds_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw new RuntimeException(e.setUnfinishedMessage(this));
    } catch (java.io.IOException e) {
      throw new RuntimeException(
          new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this));
    } finally {
      if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
        topicIds_ = java.util.Collections.unmodifiableList(topicIds_);
      }
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return NewsSubscribeProto.internal_static_com_weiwuu_protobuf_NewsSubscribe_descriptor;
  }

  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return NewsSubscribeProto.internal_static_com_weiwuu_protobuf_NewsSubscribe_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            NewsSubscribe.class, Builder.class);
  }

  private int bitField0_;
  public static final int ID_FIELD_NUMBER = 1;
  private int id_;
  /**
   * <code>optional int32 id = 1;</code>
   *
   * <pre>
   * 订阅ID
   * </pre>
   */
  public int getId() {
    return id_;
  }

  public static final int USERID_FIELD_NUMBER = 2;
  private int userId_;
  /**
   * <code>optional int32 userId = 2;</code>
   *
   * <pre>
   * 用户ID
   * </pre>
   */
  public int getUserId() {
    return userId_;
  }

  public static final int TOPICIDS_FIELD_NUMBER = 3;
  private java.util.List<Integer> topicIds_;
  /**
   * <code>repeated int32 topicIds = 3;</code>
   *
   * <pre>
   * 订阅主题清单
   * </pre>
   */
  public java.util.List<Integer>
      getTopicIdsList() {
    return topicIds_;
  }
  /**
   * <code>repeated int32 topicIds = 3;</code>
   *
   * <pre>
   * 订阅主题清单
   * </pre>
   */
  public int getTopicIdsCount() {
    return topicIds_.size();
  }
  /**
   * <code>repeated int32 topicIds = 3;</code>
   *
   * <pre>
   * 订阅主题清单
   * </pre>
   */
  public int getTopicIds(int index) {
    return topicIds_.get(index);
  }
  private int topicIdsMemoizedSerializedSize = -1;

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (id_ != 0) {
      output.writeInt32(1, id_);
    }
    if (userId_ != 0) {
      output.writeInt32(2, userId_);
    }
    if (getTopicIdsList().size() > 0) {
      output.writeRawVarint32(26);
      output.writeRawVarint32(topicIdsMemoizedSerializedSize);
    }
    for (int i = 0; i < topicIds_.size(); i++) {
      output.writeInt32NoTag(topicIds_.get(i));
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (id_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, id_);
    }
    if (userId_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, userId_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < topicIds_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(topicIds_.get(i));
      }
      size += dataSize;
      if (!getTopicIdsList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      topicIdsMemoizedSerializedSize = dataSize;
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof NewsSubscribe)) {
      return super.equals(obj);
    }
    NewsSubscribe other = (NewsSubscribe) obj;

    boolean result = true;
    result = result && (getId()
        == other.getId());
    result = result && (getUserId()
        == other.getUserId());
    result = result && getTopicIdsList()
        .equals(other.getTopicIdsList());
    return result;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptorForType().hashCode();
    hash = (37 * hash) + ID_FIELD_NUMBER;
    hash = (53 * hash) + getId();
    hash = (37 * hash) + USERID_FIELD_NUMBER;
    hash = (53 * hash) + getUserId();
    if (getTopicIdsCount() > 0) {
      hash = (37 * hash) + TOPICIDS_FIELD_NUMBER;
      hash = (53 * hash) + getTopicIdsList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static NewsSubscribe parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static NewsSubscribe parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static NewsSubscribe parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static NewsSubscribe parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static NewsSubscribe parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static NewsSubscribe parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }
  public static NewsSubscribe parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input);
  }
  public static NewsSubscribe parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input, extensionRegistry);
  }
  public static NewsSubscribe parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static NewsSubscribe parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(NewsSubscribe prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code com.weiwuu.protobuf.NewsSubscribe}
   *
   * <pre>
   * 消息订阅
   * </pre>
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:com.weiwuu.protobuf.NewsSubscribe)
      NewsSubscribeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return NewsSubscribeProto.internal_static_com_weiwuu_protobuf_NewsSubscribe_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return NewsSubscribeProto.internal_static_com_weiwuu_protobuf_NewsSubscribe_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              NewsSubscribe.class, Builder.class);
    }

    // Construct using com.weiwuu.protobuf.NewsSubscribe.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      id_ = 0;

      userId_ = 0;

      topicIds_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000004);
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return NewsSubscribeProto.internal_static_com_weiwuu_protobuf_NewsSubscribe_descriptor;
    }

    public NewsSubscribe getDefaultInstanceForType() {
      return NewsSubscribe.getDefaultInstance();
    }

    public NewsSubscribe build() {
      NewsSubscribe result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public NewsSubscribe buildPartial() {
      NewsSubscribe result = new NewsSubscribe(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.id_ = id_;
      result.userId_ = userId_;
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        topicIds_ = java.util.Collections.unmodifiableList(topicIds_);
        bitField0_ = (bitField0_ & ~0x00000004);
      }
      result.topicIds_ = topicIds_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof NewsSubscribe) {
        return mergeFrom((NewsSubscribe)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(NewsSubscribe other) {
      if (other == NewsSubscribe.getDefaultInstance()) return this;
      if (other.getId() != 0) {
        setId(other.getId());
      }
      if (other.getUserId() != 0) {
        setUserId(other.getUserId());
      }
      if (!other.topicIds_.isEmpty()) {
        if (topicIds_.isEmpty()) {
          topicIds_ = other.topicIds_;
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          ensureTopicIdsIsMutable();
          topicIds_.addAll(other.topicIds_);
        }
        onChanged();
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      NewsSubscribe parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (NewsSubscribe) e.getUnfinishedMessage();
        throw e;
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private int id_ ;
    /**
     * <code>optional int32 id = 1;</code>
     *
     * <pre>
     * 订阅ID
     * </pre>
     */
    public int getId() {
      return id_;
    }
    /**
     * <code>optional int32 id = 1;</code>
     *
     * <pre>
     * 订阅ID
     * </pre>
     */
    public Builder setId(int value) {
      
      id_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int32 id = 1;</code>
     *
     * <pre>
     * 订阅ID
     * </pre>
     */
    public Builder clearId() {
      
      id_ = 0;
      onChanged();
      return this;
    }

    private int userId_ ;
    /**
     * <code>optional int32 userId = 2;</code>
     *
     * <pre>
     * 用户ID
     * </pre>
     */
    public int getUserId() {
      return userId_;
    }
    /**
     * <code>optional int32 userId = 2;</code>
     *
     * <pre>
     * 用户ID
     * </pre>
     */
    public Builder setUserId(int value) {
      
      userId_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int32 userId = 2;</code>
     *
     * <pre>
     * 用户ID
     * </pre>
     */
    public Builder clearUserId() {
      
      userId_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<Integer> topicIds_ = java.util.Collections.emptyList();
    private void ensureTopicIdsIsMutable() {
      if (!((bitField0_ & 0x00000004) == 0x00000004)) {
        topicIds_ = new java.util.ArrayList<Integer>(topicIds_);
        bitField0_ |= 0x00000004;
       }
    }
    /**
     * <code>repeated int32 topicIds = 3;</code>
     *
     * <pre>
     * 订阅主题清单
     * </pre>
     */
    public java.util.List<Integer>
        getTopicIdsList() {
      return java.util.Collections.unmodifiableList(topicIds_);
    }
    /**
     * <code>repeated int32 topicIds = 3;</code>
     *
     * <pre>
     * 订阅主题清单
     * </pre>
     */
    public int getTopicIdsCount() {
      return topicIds_.size();
    }
    /**
     * <code>repeated int32 topicIds = 3;</code>
     *
     * <pre>
     * 订阅主题清单
     * </pre>
     */
    public int getTopicIds(int index) {
      return topicIds_.get(index);
    }
    /**
     * <code>repeated int32 topicIds = 3;</code>
     *
     * <pre>
     * 订阅主题清单
     * </pre>
     */
    public Builder setTopicIds(
        int index, int value) {
      ensureTopicIdsIsMutable();
      topicIds_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int32 topicIds = 3;</code>
     *
     * <pre>
     * 订阅主题清单
     * </pre>
     */
    public Builder addTopicIds(int value) {
      ensureTopicIdsIsMutable();
      topicIds_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int32 topicIds = 3;</code>
     *
     * <pre>
     * 订阅主题清单
     * </pre>
     */
    public Builder addAllTopicIds(
        Iterable<? extends Integer> values) {
      ensureTopicIdsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, topicIds_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int32 topicIds = 3;</code>
     *
     * <pre>
     * 订阅主题清单
     * </pre>
     */
    public Builder clearTopicIds() {
      topicIds_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:com.weiwuu.protobuf.NewsSubscribe)
  }

  // @@protoc_insertion_point(class_scope:com.weiwuu.protobuf.NewsSubscribe)
  private static final NewsSubscribe DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new NewsSubscribe();
  }

  public static NewsSubscribe getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<NewsSubscribe>
      PARSER = new com.google.protobuf.AbstractParser<NewsSubscribe>() {
    public NewsSubscribe parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      try {
        return new NewsSubscribe(input, extensionRegistry);
      } catch (RuntimeException e) {
        if (e.getCause() instanceof
            com.google.protobuf.InvalidProtocolBufferException) {
          throw (com.google.protobuf.InvalidProtocolBufferException)
              e.getCause();
        }
        throw e;
      }
    }
  };

  public static com.google.protobuf.Parser<NewsSubscribe> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<NewsSubscribe> getParserForType() {
    return PARSER;
  }

  public NewsSubscribe getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

