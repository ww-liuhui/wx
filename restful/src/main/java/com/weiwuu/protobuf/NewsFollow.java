// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: NewsFollow.proto

package com.weiwuu.protobuf;

/**
 * Protobuf type {@code com.weiwuu.protobuf.NewsFollow}
 *
 * <pre>
 * 消息跟帖
 * </pre>
 */
public  final class NewsFollow extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:com.weiwuu.protobuf.NewsFollow)
    NewsFollowOrBuilder {
  // Use NewsFollow.newBuilder() to construct.
  private NewsFollow(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private NewsFollow() {
    id_ = 0;
    newsId_ = 0;
    issueTime_ = "";
    authorId_ = 0;
    authorNickName_ = "";
    authorAvatarURL_ = "";
    content_ = "";
    assentCount_ = 0;
    opposeCount_ = 0;
    reportCount_ = 0;
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private NewsFollow(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 8: {

            id_ = input.readInt32();
            break;
          }
          case 16: {

            newsId_ = input.readInt32();
            break;
          }
          case 26: {
            String s = input.readStringRequireUtf8();

            issueTime_ = s;
            break;
          }
          case 80: {

            authorId_ = input.readInt32();
            break;
          }
          case 90: {
            String s = input.readStringRequireUtf8();

            authorNickName_ = s;
            break;
          }
          case 98: {
            String s = input.readStringRequireUtf8();

            authorAvatarURL_ = s;
            break;
          }
          case 122: {
            String s = input.readStringRequireUtf8();

            content_ = s;
            break;
          }
          case 160: {

            assentCount_ = input.readInt32();
            break;
          }
          case 168: {

            opposeCount_ = input.readInt32();
            break;
          }
          case 176: {

            reportCount_ = input.readInt32();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw new RuntimeException(e.setUnfinishedMessage(this));
    } catch (java.io.IOException e) {
      throw new RuntimeException(
          new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this));
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return NewsFollowProto.internal_static_com_weiwuu_protobuf_NewsFollow_descriptor;
  }

  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return NewsFollowProto.internal_static_com_weiwuu_protobuf_NewsFollow_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            NewsFollow.class, Builder.class);
  }

  public static final int ID_FIELD_NUMBER = 1;
  private int id_;
  /**
   * <code>optional int32 id = 1;</code>
   *
   * <pre>
   * 跟帖ID
   * </pre>
   */
  public int getId() {
    return id_;
  }

  public static final int NEWSID_FIELD_NUMBER = 2;
  private int newsId_;
  /**
   * <code>optional int32 newsId = 2;</code>
   *
   * <pre>
   * 消息ID
   * </pre>
   */
  public int getNewsId() {
    return newsId_;
  }

  public static final int ISSUETIME_FIELD_NUMBER = 3;
  private volatile Object issueTime_;
  /**
   * <code>optional string issueTime = 3;</code>
   *
   * <pre>
   * 发布时间:  (yyyy-MM-dd hh:mm:dd)
   * </pre>
   */
  public String getIssueTime() {
    Object ref = issueTime_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      issueTime_ = s;
      return s;
    }
  }
  /**
   * <code>optional string issueTime = 3;</code>
   *
   * <pre>
   * 发布时间:  (yyyy-MM-dd hh:mm:dd)
   * </pre>
   */
  public com.google.protobuf.ByteString
      getIssueTimeBytes() {
    Object ref = issueTime_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      issueTime_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int AUTHORID_FIELD_NUMBER = 10;
  private int authorId_;
  /**
   * <code>optional int32 authorId = 10;</code>
   *
   * <pre>
   * 作者 ID
   * </pre>
   */
  public int getAuthorId() {
    return authorId_;
  }

  public static final int AUTHORNICKNAME_FIELD_NUMBER = 11;
  private volatile Object authorNickName_;
  /**
   * <code>optional string authorNickName = 11;</code>
   *
   * <pre>
   * 作者的昵称
   * </pre>
   */
  public String getAuthorNickName() {
    Object ref = authorNickName_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      authorNickName_ = s;
      return s;
    }
  }
  /**
   * <code>optional string authorNickName = 11;</code>
   *
   * <pre>
   * 作者的昵称
   * </pre>
   */
  public com.google.protobuf.ByteString
      getAuthorNickNameBytes() {
    Object ref = authorNickName_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      authorNickName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int AUTHORAVATARURL_FIELD_NUMBER = 12;
  private volatile Object authorAvatarURL_;
  /**
   * <code>optional string authorAvatarURL = 12;</code>
   *
   * <pre>
   * 作者头像的URL
   * </pre>
   */
  public String getAuthorAvatarURL() {
    Object ref = authorAvatarURL_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      authorAvatarURL_ = s;
      return s;
    }
  }
  /**
   * <code>optional string authorAvatarURL = 12;</code>
   *
   * <pre>
   * 作者头像的URL
   * </pre>
   */
  public com.google.protobuf.ByteString
      getAuthorAvatarURLBytes() {
    Object ref = authorAvatarURL_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      authorAvatarURL_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CONTENT_FIELD_NUMBER = 15;
  private volatile Object content_;
  /**
   * <code>optional string content = 15;</code>
   *
   * <pre>
   * 内容: (限制字数 &lt;= 2048)
   * </pre>
   */
  public String getContent() {
    Object ref = content_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      content_ = s;
      return s;
    }
  }
  /**
   * <code>optional string content = 15;</code>
   *
   * <pre>
   * 内容: (限制字数 &lt;= 2048)
   * </pre>
   */
  public com.google.protobuf.ByteString
      getContentBytes() {
    Object ref = content_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      content_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ASSENTCOUNT_FIELD_NUMBER = 20;
  private int assentCount_;
  /**
   * <code>optional int32 assentCount = 20;</code>
   *
   * <pre>
   * 赞同统计
   * </pre>
   */
  public int getAssentCount() {
    return assentCount_;
  }

  public static final int OPPOSECOUNT_FIELD_NUMBER = 21;
  private int opposeCount_;
  /**
   * <code>optional int32 opposeCount = 21;</code>
   *
   * <pre>
   * 反对统计
   * </pre>
   */
  public int getOpposeCount() {
    return opposeCount_;
  }

  public static final int REPORTCOUNT_FIELD_NUMBER = 22;
  private int reportCount_;
  /**
   * <code>optional int32 reportCount = 22;</code>
   *
   * <pre>
   * 举报统计
   * </pre>
   */
  public int getReportCount() {
    return reportCount_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (id_ != 0) {
      output.writeInt32(1, id_);
    }
    if (newsId_ != 0) {
      output.writeInt32(2, newsId_);
    }
    if (!getIssueTimeBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessage.writeString(output, 3, issueTime_);
    }
    if (authorId_ != 0) {
      output.writeInt32(10, authorId_);
    }
    if (!getAuthorNickNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessage.writeString(output, 11, authorNickName_);
    }
    if (!getAuthorAvatarURLBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessage.writeString(output, 12, authorAvatarURL_);
    }
    if (!getContentBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessage.writeString(output, 15, content_);
    }
    if (assentCount_ != 0) {
      output.writeInt32(20, assentCount_);
    }
    if (opposeCount_ != 0) {
      output.writeInt32(21, opposeCount_);
    }
    if (reportCount_ != 0) {
      output.writeInt32(22, reportCount_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (id_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, id_);
    }
    if (newsId_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, newsId_);
    }
    if (!getIssueTimeBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(3, issueTime_);
    }
    if (authorId_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(10, authorId_);
    }
    if (!getAuthorNickNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(11, authorNickName_);
    }
    if (!getAuthorAvatarURLBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(12, authorAvatarURL_);
    }
    if (!getContentBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(15, content_);
    }
    if (assentCount_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(20, assentCount_);
    }
    if (opposeCount_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(21, opposeCount_);
    }
    if (reportCount_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(22, reportCount_);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof NewsFollow)) {
      return super.equals(obj);
    }
    NewsFollow other = (NewsFollow) obj;

    boolean result = true;
    result = result && (getId()
        == other.getId());
    result = result && (getNewsId()
        == other.getNewsId());
    result = result && getIssueTime()
        .equals(other.getIssueTime());
    result = result && (getAuthorId()
        == other.getAuthorId());
    result = result && getAuthorNickName()
        .equals(other.getAuthorNickName());
    result = result && getAuthorAvatarURL()
        .equals(other.getAuthorAvatarURL());
    result = result && getContent()
        .equals(other.getContent());
    result = result && (getAssentCount()
        == other.getAssentCount());
    result = result && (getOpposeCount()
        == other.getOpposeCount());
    result = result && (getReportCount()
        == other.getReportCount());
    return result;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptorForType().hashCode();
    hash = (37 * hash) + ID_FIELD_NUMBER;
    hash = (53 * hash) + getId();
    hash = (37 * hash) + NEWSID_FIELD_NUMBER;
    hash = (53 * hash) + getNewsId();
    hash = (37 * hash) + ISSUETIME_FIELD_NUMBER;
    hash = (53 * hash) + getIssueTime().hashCode();
    hash = (37 * hash) + AUTHORID_FIELD_NUMBER;
    hash = (53 * hash) + getAuthorId();
    hash = (37 * hash) + AUTHORNICKNAME_FIELD_NUMBER;
    hash = (53 * hash) + getAuthorNickName().hashCode();
    hash = (37 * hash) + AUTHORAVATARURL_FIELD_NUMBER;
    hash = (53 * hash) + getAuthorAvatarURL().hashCode();
    hash = (37 * hash) + CONTENT_FIELD_NUMBER;
    hash = (53 * hash) + getContent().hashCode();
    hash = (37 * hash) + ASSENTCOUNT_FIELD_NUMBER;
    hash = (53 * hash) + getAssentCount();
    hash = (37 * hash) + OPPOSECOUNT_FIELD_NUMBER;
    hash = (53 * hash) + getOpposeCount();
    hash = (37 * hash) + REPORTCOUNT_FIELD_NUMBER;
    hash = (53 * hash) + getReportCount();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static NewsFollow parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static NewsFollow parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static NewsFollow parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static NewsFollow parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static NewsFollow parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static NewsFollow parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }
  public static NewsFollow parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input);
  }
  public static NewsFollow parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input, extensionRegistry);
  }
  public static NewsFollow parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static NewsFollow parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(NewsFollow prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code com.weiwuu.protobuf.NewsFollow}
   *
   * <pre>
   * 消息跟帖
   * </pre>
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:com.weiwuu.protobuf.NewsFollow)
      NewsFollowOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return NewsFollowProto.internal_static_com_weiwuu_protobuf_NewsFollow_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return NewsFollowProto.internal_static_com_weiwuu_protobuf_NewsFollow_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              NewsFollow.class, Builder.class);
    }

    // Construct using com.weiwuu.protobuf.NewsFollow.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      id_ = 0;

      newsId_ = 0;

      issueTime_ = "";

      authorId_ = 0;

      authorNickName_ = "";

      authorAvatarURL_ = "";

      content_ = "";

      assentCount_ = 0;

      opposeCount_ = 0;

      reportCount_ = 0;

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return NewsFollowProto.internal_static_com_weiwuu_protobuf_NewsFollow_descriptor;
    }

    public NewsFollow getDefaultInstanceForType() {
      return NewsFollow.getDefaultInstance();
    }

    public NewsFollow build() {
      NewsFollow result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public NewsFollow buildPartial() {
      NewsFollow result = new NewsFollow(this);
      result.id_ = id_;
      result.newsId_ = newsId_;
      result.issueTime_ = issueTime_;
      result.authorId_ = authorId_;
      result.authorNickName_ = authorNickName_;
      result.authorAvatarURL_ = authorAvatarURL_;
      result.content_ = content_;
      result.assentCount_ = assentCount_;
      result.opposeCount_ = opposeCount_;
      result.reportCount_ = reportCount_;
      onBuilt();
      return result;
    }

    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof NewsFollow) {
        return mergeFrom((NewsFollow)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(NewsFollow other) {
      if (other == NewsFollow.getDefaultInstance()) return this;
      if (other.getId() != 0) {
        setId(other.getId());
      }
      if (other.getNewsId() != 0) {
        setNewsId(other.getNewsId());
      }
      if (!other.getIssueTime().isEmpty()) {
        issueTime_ = other.issueTime_;
        onChanged();
      }
      if (other.getAuthorId() != 0) {
        setAuthorId(other.getAuthorId());
      }
      if (!other.getAuthorNickName().isEmpty()) {
        authorNickName_ = other.authorNickName_;
        onChanged();
      }
      if (!other.getAuthorAvatarURL().isEmpty()) {
        authorAvatarURL_ = other.authorAvatarURL_;
        onChanged();
      }
      if (!other.getContent().isEmpty()) {
        content_ = other.content_;
        onChanged();
      }
      if (other.getAssentCount() != 0) {
        setAssentCount(other.getAssentCount());
      }
      if (other.getOpposeCount() != 0) {
        setOpposeCount(other.getOpposeCount());
      }
      if (other.getReportCount() != 0) {
        setReportCount(other.getReportCount());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      NewsFollow parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (NewsFollow) e.getUnfinishedMessage();
        throw e;
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private int id_ ;
    /**
     * <code>optional int32 id = 1;</code>
     *
     * <pre>
     * 跟帖ID
     * </pre>
     */
    public int getId() {
      return id_;
    }
    /**
     * <code>optional int32 id = 1;</code>
     *
     * <pre>
     * 跟帖ID
     * </pre>
     */
    public Builder setId(int value) {
      
      id_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int32 id = 1;</code>
     *
     * <pre>
     * 跟帖ID
     * </pre>
     */
    public Builder clearId() {
      
      id_ = 0;
      onChanged();
      return this;
    }

    private int newsId_ ;
    /**
     * <code>optional int32 newsId = 2;</code>
     *
     * <pre>
     * 消息ID
     * </pre>
     */
    public int getNewsId() {
      return newsId_;
    }
    /**
     * <code>optional int32 newsId = 2;</code>
     *
     * <pre>
     * 消息ID
     * </pre>
     */
    public Builder setNewsId(int value) {
      
      newsId_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int32 newsId = 2;</code>
     *
     * <pre>
     * 消息ID
     * </pre>
     */
    public Builder clearNewsId() {
      
      newsId_ = 0;
      onChanged();
      return this;
    }

    private Object issueTime_ = "";
    /**
     * <code>optional string issueTime = 3;</code>
     *
     * <pre>
     * 发布时间:  (yyyy-MM-dd hh:mm:dd)
     * </pre>
     */
    public String getIssueTime() {
      Object ref = issueTime_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        issueTime_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <code>optional string issueTime = 3;</code>
     *
     * <pre>
     * 发布时间:  (yyyy-MM-dd hh:mm:dd)
     * </pre>
     */
    public com.google.protobuf.ByteString
        getIssueTimeBytes() {
      Object ref = issueTime_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        issueTime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>optional string issueTime = 3;</code>
     *
     * <pre>
     * 发布时间:  (yyyy-MM-dd hh:mm:dd)
     * </pre>
     */
    public Builder setIssueTime(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      issueTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional string issueTime = 3;</code>
     *
     * <pre>
     * 发布时间:  (yyyy-MM-dd hh:mm:dd)
     * </pre>
     */
    public Builder clearIssueTime() {
      
      issueTime_ = getDefaultInstance().getIssueTime();
      onChanged();
      return this;
    }
    /**
     * <code>optional string issueTime = 3;</code>
     *
     * <pre>
     * 发布时间:  (yyyy-MM-dd hh:mm:dd)
     * </pre>
     */
    public Builder setIssueTimeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      issueTime_ = value;
      onChanged();
      return this;
    }

    private int authorId_ ;
    /**
     * <code>optional int32 authorId = 10;</code>
     *
     * <pre>
     * 作者 ID
     * </pre>
     */
    public int getAuthorId() {
      return authorId_;
    }
    /**
     * <code>optional int32 authorId = 10;</code>
     *
     * <pre>
     * 作者 ID
     * </pre>
     */
    public Builder setAuthorId(int value) {
      
      authorId_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int32 authorId = 10;</code>
     *
     * <pre>
     * 作者 ID
     * </pre>
     */
    public Builder clearAuthorId() {
      
      authorId_ = 0;
      onChanged();
      return this;
    }

    private Object authorNickName_ = "";
    /**
     * <code>optional string authorNickName = 11;</code>
     *
     * <pre>
     * 作者的昵称
     * </pre>
     */
    public String getAuthorNickName() {
      Object ref = authorNickName_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        authorNickName_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <code>optional string authorNickName = 11;</code>
     *
     * <pre>
     * 作者的昵称
     * </pre>
     */
    public com.google.protobuf.ByteString
        getAuthorNickNameBytes() {
      Object ref = authorNickName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        authorNickName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>optional string authorNickName = 11;</code>
     *
     * <pre>
     * 作者的昵称
     * </pre>
     */
    public Builder setAuthorNickName(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      authorNickName_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional string authorNickName = 11;</code>
     *
     * <pre>
     * 作者的昵称
     * </pre>
     */
    public Builder clearAuthorNickName() {
      
      authorNickName_ = getDefaultInstance().getAuthorNickName();
      onChanged();
      return this;
    }
    /**
     * <code>optional string authorNickName = 11;</code>
     *
     * <pre>
     * 作者的昵称
     * </pre>
     */
    public Builder setAuthorNickNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      authorNickName_ = value;
      onChanged();
      return this;
    }

    private Object authorAvatarURL_ = "";
    /**
     * <code>optional string authorAvatarURL = 12;</code>
     *
     * <pre>
     * 作者头像的URL
     * </pre>
     */
    public String getAuthorAvatarURL() {
      Object ref = authorAvatarURL_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        authorAvatarURL_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <code>optional string authorAvatarURL = 12;</code>
     *
     * <pre>
     * 作者头像的URL
     * </pre>
     */
    public com.google.protobuf.ByteString
        getAuthorAvatarURLBytes() {
      Object ref = authorAvatarURL_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        authorAvatarURL_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>optional string authorAvatarURL = 12;</code>
     *
     * <pre>
     * 作者头像的URL
     * </pre>
     */
    public Builder setAuthorAvatarURL(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      authorAvatarURL_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional string authorAvatarURL = 12;</code>
     *
     * <pre>
     * 作者头像的URL
     * </pre>
     */
    public Builder clearAuthorAvatarURL() {
      
      authorAvatarURL_ = getDefaultInstance().getAuthorAvatarURL();
      onChanged();
      return this;
    }
    /**
     * <code>optional string authorAvatarURL = 12;</code>
     *
     * <pre>
     * 作者头像的URL
     * </pre>
     */
    public Builder setAuthorAvatarURLBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      authorAvatarURL_ = value;
      onChanged();
      return this;
    }

    private Object content_ = "";
    /**
     * <code>optional string content = 15;</code>
     *
     * <pre>
     * 内容: (限制字数 &lt;= 2048)
     * </pre>
     */
    public String getContent() {
      Object ref = content_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        content_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <code>optional string content = 15;</code>
     *
     * <pre>
     * 内容: (限制字数 &lt;= 2048)
     * </pre>
     */
    public com.google.protobuf.ByteString
        getContentBytes() {
      Object ref = content_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        content_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>optional string content = 15;</code>
     *
     * <pre>
     * 内容: (限制字数 &lt;= 2048)
     * </pre>
     */
    public Builder setContent(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      content_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional string content = 15;</code>
     *
     * <pre>
     * 内容: (限制字数 &lt;= 2048)
     * </pre>
     */
    public Builder clearContent() {
      
      content_ = getDefaultInstance().getContent();
      onChanged();
      return this;
    }
    /**
     * <code>optional string content = 15;</code>
     *
     * <pre>
     * 内容: (限制字数 &lt;= 2048)
     * </pre>
     */
    public Builder setContentBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      content_ = value;
      onChanged();
      return this;
    }

    private int assentCount_ ;
    /**
     * <code>optional int32 assentCount = 20;</code>
     *
     * <pre>
     * 赞同统计
     * </pre>
     */
    public int getAssentCount() {
      return assentCount_;
    }
    /**
     * <code>optional int32 assentCount = 20;</code>
     *
     * <pre>
     * 赞同统计
     * </pre>
     */
    public Builder setAssentCount(int value) {
      
      assentCount_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int32 assentCount = 20;</code>
     *
     * <pre>
     * 赞同统计
     * </pre>
     */
    public Builder clearAssentCount() {
      
      assentCount_ = 0;
      onChanged();
      return this;
    }

    private int opposeCount_ ;
    /**
     * <code>optional int32 opposeCount = 21;</code>
     *
     * <pre>
     * 反对统计
     * </pre>
     */
    public int getOpposeCount() {
      return opposeCount_;
    }
    /**
     * <code>optional int32 opposeCount = 21;</code>
     *
     * <pre>
     * 反对统计
     * </pre>
     */
    public Builder setOpposeCount(int value) {
      
      opposeCount_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int32 opposeCount = 21;</code>
     *
     * <pre>
     * 反对统计
     * </pre>
     */
    public Builder clearOpposeCount() {
      
      opposeCount_ = 0;
      onChanged();
      return this;
    }

    private int reportCount_ ;
    /**
     * <code>optional int32 reportCount = 22;</code>
     *
     * <pre>
     * 举报统计
     * </pre>
     */
    public int getReportCount() {
      return reportCount_;
    }
    /**
     * <code>optional int32 reportCount = 22;</code>
     *
     * <pre>
     * 举报统计
     * </pre>
     */
    public Builder setReportCount(int value) {
      
      reportCount_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int32 reportCount = 22;</code>
     *
     * <pre>
     * 举报统计
     * </pre>
     */
    public Builder clearReportCount() {
      
      reportCount_ = 0;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:com.weiwuu.protobuf.NewsFollow)
  }

  // @@protoc_insertion_point(class_scope:com.weiwuu.protobuf.NewsFollow)
  private static final NewsFollow DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new NewsFollow();
  }

  public static NewsFollow getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<NewsFollow>
      PARSER = new com.google.protobuf.AbstractParser<NewsFollow>() {
    public NewsFollow parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      try {
        return new NewsFollow(input, extensionRegistry);
      } catch (RuntimeException e) {
        if (e.getCause() instanceof
            com.google.protobuf.InvalidProtocolBufferException) {
          throw (com.google.protobuf.InvalidProtocolBufferException)
              e.getCause();
        }
        throw e;
      }
    }
  };

  public static com.google.protobuf.Parser<NewsFollow> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<NewsFollow> getParserForType() {
    return PARSER;
  }

  public NewsFollow getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

