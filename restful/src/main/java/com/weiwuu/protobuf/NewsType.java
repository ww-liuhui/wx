// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: NewsType.proto

package com.weiwuu.protobuf;

/**
 * Protobuf type {@code com.weiwuu.protobuf.NewsType}
 *
 * <pre>
 * 消息分类
 * </pre>
 */
public  final class NewsType extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:com.weiwuu.protobuf.NewsType)
    NewsTypeOrBuilder {
  // Use NewsType.newBuilder() to construct.
  private NewsType(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private NewsType() {
    typeId_ = 0;
    typeName_ = "";
    typeIconUrl_ = "";
    orderNum_ = 0;
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private NewsType(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 8: {

            typeId_ = input.readInt32();
            break;
          }
          case 18: {
            String s = input.readStringRequireUtf8();

            typeName_ = s;
            break;
          }
          case 26: {
            String s = input.readStringRequireUtf8();

            typeIconUrl_ = s;
            break;
          }
          case 32: {

            orderNum_ = input.readInt32();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw new RuntimeException(e.setUnfinishedMessage(this));
    } catch (java.io.IOException e) {
      throw new RuntimeException(
          new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this));
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return NewsTypeProto.internal_static_com_weiwuu_protobuf_NewsType_descriptor;
  }

  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return NewsTypeProto.internal_static_com_weiwuu_protobuf_NewsType_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            NewsType.class, Builder.class);
  }

  public static final int TYPEID_FIELD_NUMBER = 1;
  private int typeId_;
  /**
   * <code>optional int32 typeId = 1;</code>
   *
   * <pre>
   * ID
   * </pre>
   */
  public int getTypeId() {
    return typeId_;
  }

  public static final int TYPENAME_FIELD_NUMBER = 2;
  private volatile Object typeName_;
  /**
   * <code>optional string typeName = 2;</code>
   *
   * <pre>
   * 名称
   * </pre>
   */
  public String getTypeName() {
    Object ref = typeName_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      typeName_ = s;
      return s;
    }
  }
  /**
   * <code>optional string typeName = 2;</code>
   *
   * <pre>
   * 名称
   * </pre>
   */
  public com.google.protobuf.ByteString
      getTypeNameBytes() {
    Object ref = typeName_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      typeName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TYPEICONURL_FIELD_NUMBER = 3;
  private volatile Object typeIconUrl_;
  /**
   * <code>optional string typeIconUrl = 3;</code>
   *
   * <pre>
   * 图标
   * </pre>
   */
  public String getTypeIconUrl() {
    Object ref = typeIconUrl_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      typeIconUrl_ = s;
      return s;
    }
  }
  /**
   * <code>optional string typeIconUrl = 3;</code>
   *
   * <pre>
   * 图标
   * </pre>
   */
  public com.google.protobuf.ByteString
      getTypeIconUrlBytes() {
    Object ref = typeIconUrl_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      typeIconUrl_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ORDERNUM_FIELD_NUMBER = 4;
  private int orderNum_;
  /**
   * <code>optional int32 orderNum = 4;</code>
   *
   * <pre>
   * 排序
   * </pre>
   */
  public int getOrderNum() {
    return orderNum_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (typeId_ != 0) {
      output.writeInt32(1, typeId_);
    }
    if (!getTypeNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessage.writeString(output, 2, typeName_);
    }
    if (!getTypeIconUrlBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessage.writeString(output, 3, typeIconUrl_);
    }
    if (orderNum_ != 0) {
      output.writeInt32(4, orderNum_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (typeId_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, typeId_);
    }
    if (!getTypeNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(2, typeName_);
    }
    if (!getTypeIconUrlBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(3, typeIconUrl_);
    }
    if (orderNum_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, orderNum_);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof NewsType)) {
      return super.equals(obj);
    }
    NewsType other = (NewsType) obj;

    boolean result = true;
    result = result && (getTypeId()
        == other.getTypeId());
    result = result && getTypeName()
        .equals(other.getTypeName());
    result = result && getTypeIconUrl()
        .equals(other.getTypeIconUrl());
    result = result && (getOrderNum()
        == other.getOrderNum());
    return result;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptorForType().hashCode();
    hash = (37 * hash) + TYPEID_FIELD_NUMBER;
    hash = (53 * hash) + getTypeId();
    hash = (37 * hash) + TYPENAME_FIELD_NUMBER;
    hash = (53 * hash) + getTypeName().hashCode();
    hash = (37 * hash) + TYPEICONURL_FIELD_NUMBER;
    hash = (53 * hash) + getTypeIconUrl().hashCode();
    hash = (37 * hash) + ORDERNUM_FIELD_NUMBER;
    hash = (53 * hash) + getOrderNum();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static NewsType parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static NewsType parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static NewsType parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static NewsType parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static NewsType parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static NewsType parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }
  public static NewsType parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input);
  }
  public static NewsType parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input, extensionRegistry);
  }
  public static NewsType parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static NewsType parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(NewsType prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code com.weiwuu.protobuf.NewsType}
   *
   * <pre>
   * 消息分类
   * </pre>
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:com.weiwuu.protobuf.NewsType)
      NewsTypeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return NewsTypeProto.internal_static_com_weiwuu_protobuf_NewsType_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return NewsTypeProto.internal_static_com_weiwuu_protobuf_NewsType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              NewsType.class, Builder.class);
    }

    // Construct using com.weiwuu.protobuf.NewsType.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      typeId_ = 0;

      typeName_ = "";

      typeIconUrl_ = "";

      orderNum_ = 0;

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return NewsTypeProto.internal_static_com_weiwuu_protobuf_NewsType_descriptor;
    }

    public NewsType getDefaultInstanceForType() {
      return NewsType.getDefaultInstance();
    }

    public NewsType build() {
      NewsType result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public NewsType buildPartial() {
      NewsType result = new NewsType(this);
      result.typeId_ = typeId_;
      result.typeName_ = typeName_;
      result.typeIconUrl_ = typeIconUrl_;
      result.orderNum_ = orderNum_;
      onBuilt();
      return result;
    }

    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof NewsType) {
        return mergeFrom((NewsType)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(NewsType other) {
      if (other == NewsType.getDefaultInstance()) return this;
      if (other.getTypeId() != 0) {
        setTypeId(other.getTypeId());
      }
      if (!other.getTypeName().isEmpty()) {
        typeName_ = other.typeName_;
        onChanged();
      }
      if (!other.getTypeIconUrl().isEmpty()) {
        typeIconUrl_ = other.typeIconUrl_;
        onChanged();
      }
      if (other.getOrderNum() != 0) {
        setOrderNum(other.getOrderNum());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      NewsType parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (NewsType) e.getUnfinishedMessage();
        throw e;
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private int typeId_ ;
    /**
     * <code>optional int32 typeId = 1;</code>
     *
     * <pre>
     * ID
     * </pre>
     */
    public int getTypeId() {
      return typeId_;
    }
    /**
     * <code>optional int32 typeId = 1;</code>
     *
     * <pre>
     * ID
     * </pre>
     */
    public Builder setTypeId(int value) {
      
      typeId_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int32 typeId = 1;</code>
     *
     * <pre>
     * ID
     * </pre>
     */
    public Builder clearTypeId() {
      
      typeId_ = 0;
      onChanged();
      return this;
    }

    private Object typeName_ = "";
    /**
     * <code>optional string typeName = 2;</code>
     *
     * <pre>
     * 名称
     * </pre>
     */
    public String getTypeName() {
      Object ref = typeName_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        typeName_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <code>optional string typeName = 2;</code>
     *
     * <pre>
     * 名称
     * </pre>
     */
    public com.google.protobuf.ByteString
        getTypeNameBytes() {
      Object ref = typeName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        typeName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>optional string typeName = 2;</code>
     *
     * <pre>
     * 名称
     * </pre>
     */
    public Builder setTypeName(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      typeName_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional string typeName = 2;</code>
     *
     * <pre>
     * 名称
     * </pre>
     */
    public Builder clearTypeName() {
      
      typeName_ = getDefaultInstance().getTypeName();
      onChanged();
      return this;
    }
    /**
     * <code>optional string typeName = 2;</code>
     *
     * <pre>
     * 名称
     * </pre>
     */
    public Builder setTypeNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      typeName_ = value;
      onChanged();
      return this;
    }

    private Object typeIconUrl_ = "";
    /**
     * <code>optional string typeIconUrl = 3;</code>
     *
     * <pre>
     * 图标
     * </pre>
     */
    public String getTypeIconUrl() {
      Object ref = typeIconUrl_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        typeIconUrl_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <code>optional string typeIconUrl = 3;</code>
     *
     * <pre>
     * 图标
     * </pre>
     */
    public com.google.protobuf.ByteString
        getTypeIconUrlBytes() {
      Object ref = typeIconUrl_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        typeIconUrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>optional string typeIconUrl = 3;</code>
     *
     * <pre>
     * 图标
     * </pre>
     */
    public Builder setTypeIconUrl(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      typeIconUrl_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional string typeIconUrl = 3;</code>
     *
     * <pre>
     * 图标
     * </pre>
     */
    public Builder clearTypeIconUrl() {
      
      typeIconUrl_ = getDefaultInstance().getTypeIconUrl();
      onChanged();
      return this;
    }
    /**
     * <code>optional string typeIconUrl = 3;</code>
     *
     * <pre>
     * 图标
     * </pre>
     */
    public Builder setTypeIconUrlBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      typeIconUrl_ = value;
      onChanged();
      return this;
    }

    private int orderNum_ ;
    /**
     * <code>optional int32 orderNum = 4;</code>
     *
     * <pre>
     * 排序
     * </pre>
     */
    public int getOrderNum() {
      return orderNum_;
    }
    /**
     * <code>optional int32 orderNum = 4;</code>
     *
     * <pre>
     * 排序
     * </pre>
     */
    public Builder setOrderNum(int value) {
      
      orderNum_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int32 orderNum = 4;</code>
     *
     * <pre>
     * 排序
     * </pre>
     */
    public Builder clearOrderNum() {
      
      orderNum_ = 0;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:com.weiwuu.protobuf.NewsType)
  }

  // @@protoc_insertion_point(class_scope:com.weiwuu.protobuf.NewsType)
  private static final NewsType DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new NewsType();
  }

  public static NewsType getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<NewsType>
      PARSER = new com.google.protobuf.AbstractParser<NewsType>() {
    public NewsType parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      try {
        return new NewsType(input, extensionRegistry);
      } catch (RuntimeException e) {
        if (e.getCause() instanceof
            com.google.protobuf.InvalidProtocolBufferException) {
          throw (com.google.protobuf.InvalidProtocolBufferException)
              e.getCause();
        }
        throw e;
      }
    }
  };

  public static com.google.protobuf.Parser<NewsType> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<NewsType> getParserForType() {
    return PARSER;
  }

  public NewsType getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

